name: CI

on:
  push:
    branches: [supplement-robot-tests]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test
    # add postgresql
    services:
      postgres:
        image: postgres:latest
        env:
          # postgresql setting
          POSTGRES_DB: testdb
          POSTGRES_USER: testdb
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
          echo "DATABASE_URL=${{ vars.DATABASE_URL }}" >> .env
          echo "PSQL_SCHEMA_COMMAND=${{ vars.PSQL_SCHEMA_COMMAND }}" >> .env
      
      - name: Copy .env to .env.test
        run: cp .env .env.test
        
      - name: Install Poetry
        run: pip install poetry

      - name: Setup chromedriver
        uses: nanasess/setup-chromedriver@master
      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          
      - name: Install dependencies
        run: poetry install

      - name: Build frontend
        run: poetry run invoke build-frontend
          
      - name: Run tests
        run: poetry run coverage run --branch -m pytest
      
      - name: Run robot tests
        run: bash run_robot_tests.sh
        
      - name: Coverage report
        run: poetry run coverage xml
      
      - name: Coverage report to Codecov
        run: bash <(curl -s https://codecov.io/bash)
      
      - name: Run pylint
        run: poetry run pylint src/
